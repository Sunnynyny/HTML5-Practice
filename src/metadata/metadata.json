
{
  "package": "Coinbase",
  "tagline": "Make bitcoin/ethereum transactions and get real-time data.",
  "description": "Connect to the Coinbase Digital Currency API to make bitcoin/ethereum transactions and get real-time data. Test an API call and export the code into your app.",
  "image": "https://logo.clearbit.com/coinbase.com?s=128",
  "repo": "https://github.com/RapidSoftwareSolutions/Marketplace-Coinbase-Package",
  "keywords": [
    "API",
    "Bitcoin",
    "Ethereum",
    "Coinbase"
  ],
  "accounts": {
    "domain": "coinbase.com",
    "credentials": [
      "clientId",
      "clientSecret",
      "apiKey",
      "secretKey"
    ]
  },
  "blocks": [
    {
      "name": "getAccessToken",
      "description": "Geta access token.",
      "args": [
        {
          "name": "clientId",
          "type": "credentials",
          "info": "Client identifier.",
          "required": true
        },
        {
          "name": "clientSecret",
          "type": "credentials",
          "info": "Client secret.",
          "required": true
        },
        {
          "name": "redirectUri",
          "type": "String",
          "info": "URL in your app where users will be sent after authorization.",
          "required": true
        },
        {
          "name": "code",
          "type": "String",
          "info": "A one-time use code that may be exchanged for a bearer token.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "refreshAccessToken",
      "description": "Refresh access token.",
      "args": [
        {
          "name": "clientId",
          "type": "credentials",
          "info": "Client identifier.",
          "required": true
        },
        {
          "name": "clientSecret",
          "type": "credentials",
          "info": "Client secret.",
          "required": true
        },
        {
          "name": "refreshToken",
          "type": "String",
          "info": "The refresh token retrieved during the initial request for an access token.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "revokeAccessToken",
      "description": "RevokeAccessToken.",
      "args": [
        {
          "name": "token",
          "type": "String",
          "info": "Active access token.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getNotifications",
      "description": "Lists notifications where the current user was the subscriber. Scopes: wallet:notifications:read",
      "args": [
        {
          "name": "apiKey",
          "type": "String",
          "info": "Your API Key.",
          "required": true
        },
        {
          "name": "secretKey",
          "type": "String",
          "info": "Your API Secret.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleNotification",
      "description": "Show a notification for which the current user was a subsciber. Scopes: wallet:notifications:read",
      "args": [
        {
          "name": "apiKey",
          "type": "String",
          "info": "Your API Key.",
          "required": true
        },
        {
          "name": "secretKey",
          "type": "String",
          "info": "Your API Secret.",
          "required": true
        },
        {
          "name": "notificationsId",
          "type": "String",
          "info": "Single notification identifier.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getUser",
      "description": "Get any user\u2019s public information with their ID.",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access token.",
          "required": true
        },
        {
          "name": "userId",
          "type": "String",
          "info": "User identifier.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getMe",
      "description": "Get current user\u2019s public information. Scope: wallet:user:read,wallet:user:email",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access token.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getMyAuthInfo",
      "description": "Get current user\u2019s authorization information including granted scopes.",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access token.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateMe",
      "description": "Modify current user and their preferences. Scope: wallet:user:update",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access token.",
          "required": true
        },
        {
          "name": "name",
          "type": "String",
          "info": "User\u2019s public name.",
          "required": false
        },
        {
          "name": "timeZone",
          "type": "String",
          "info": "Time zone.",
          "required": false
        },
        {
          "name": "nativeCurrency",
          "type": "String",
          "info": "Local currency used to display amounts converted from BTC.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getAccounts",
      "description": "Lists current user\u2019s accounts to which the authentication method has access to. Scope: wallet:accounts:read",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access token.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleAccount",
      "description": "Show current user\u2019s account. Scopes: wallet:accounts:read",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access token.",
          "required": true
        },
        {
          "name": "accountId",
          "type": "String",
          "info": "Current user account identifier.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createAccount",
      "description": "Creates a new account for user. Scopes: wallet:accounts:create",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access token.",
          "required": true
        },
        {
          "name": "name",
          "type": "String",
          "info": "Account name.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "setAccountAsPrimary",
      "description": "Promote an account as primary account. Scopes: wallet:accounts:update",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access token.",
          "required": true
        },
        {
          "name": "accountId",
          "type": "String",
          "info": "Account identifier.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateAccount",
      "description": "UpdateAccount. Scopes: wallet:accounts:update",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access token.",
          "required": true
        },
        {
          "name": "accountId",
          "type": "String",
          "info": "Account identifier.",
          "required": true
        },
        {
          "name": "name",
          "type": "String",
          "info": "Account name",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteAccount",
      "description": "Removes user\u2019s account. Scopes: wallet:accounts:delete",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access token.",
          "required": true
        },
        {
          "name": "accountId",
          "type": "String",
          "info": "Account identifier.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getAddresses",
      "description": "Lists addresses for an account. Scopes: wallet:addresses:read",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access token.",
          "required": true
        },
        {
          "name": "accountId",
          "type": "String",
          "info": "Account identifier.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleAddress",
      "description": "GetSingleAddress. Scopes: wallet:addresses:read",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access token.",
          "required": true
        },
        {
          "name": "accountId",
          "type": "String",
          "info": "Account identifier.",
          "required": true
        },
        {
          "name": "addressId",
          "type": "String",
          "info": "Address identifier.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getAddressTransactions",
      "description": "List transactions that have been sent to a specific address. Scopes: wallet:transactions:read",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access token.",
          "required": true
        },
        {
          "name": "accountId",
          "type": "String",
          "info": "Account identifier.",
          "required": true
        },
        {
          "name": "addressId",
          "type": "String",
          "info": "Address identifier.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createAddress",
      "description": "Creates a new address for an account. Scopes: wallet:addresses:create",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access token.",
          "required": true
        },
        {
          "name": "accountId",
          "type": "String",
          "info": "Account identifier.",
          "required": true
        },
        {
          "name": "name",
          "type": "String",
          "info": "Address label.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTransactions",
      "description": "Lists account\u2019s transactions. Scopes: wallet:transactions:read",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access token.",
          "required": true
        },
        {
          "name": "accountId",
          "type": "String",
          "info": "Account identifier.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleTransaction",
      "description": "Show an individual transaction for an account. Scopes: wallet:transactions:read",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access token.",
          "required": true
        },
        {
          "name": "accountId",
          "type": "String",
          "info": "Account identifier.",
          "required": true
        },
        {
          "name": "transactionId",
          "type": "String",
          "info": "Transaction identifier.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "sendMoney",
      "description": "Send funds to a bitcoin address, ethereum address, or email address. Scopes: wallet:transactions:send",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access token.",
          "required": true
        },
        {
          "name": "to",
          "type": "String",
          "info": "A bitcoin address, ethereum address, or an email of the recipient.",
          "required": true
        },
        {
          "name": "amount",
          "type": "String",
          "info": "Amount to be sent.",
          "required": true
        },
        {
          "name": "currency",
          "type": "String",
          "info": "Currency for the amount.",
          "required": true
        },
        {
          "name": "description",
          "type": "String",
          "info": "Notes to be included in the email that the recipient receives.",
          "required": false
        },
        {
          "name": "skipNotifications",
          "type": "Boolean",
          "info": "Don\u2019t send notification emails for small amounts.",
          "required": false
        },
        {
          "name": "fee",
          "type": "String",
          "info": "Transaction fee in BTC if you would like to pay it.",
          "required": false
        },
        {
          "name": "idem",
          "type": "String",
          "info": "A token to ensure idempotence.",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {